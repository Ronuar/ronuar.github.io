.english-layout {
  * {
    box-sizing: border-box;
  }

  .game-window {
    overflow: visible;
  }

  .grid {
    width: 600px;
    height: 600px;
    margin: 0 auto;
    font-size: 0;
  }

  .grid-cell {
    display: inline-block;
    width: 16.6666667%;
    height: 16.6666667%;
    padding: 5px;
    vertical-align: middle;

    .card {
      position: relative;
      width: 100%;
      height: 100%;
      border-radius: 4px;
      border: 2px solid;
      font-size: 16px;
      padding: 10px;
      text-transform: uppercase;
      cursor: pointer;
      transform-style: preserve-3d;
      transition: all 0.6s;

      span {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%)
      }

      .front,
      .back {
        margin: 0;
        display: block;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
      }

      .back {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background: white;
        transform: rotateY(180deg);

        img {
          height: 100%;
          padding: 20px;
        }
      }

      &.is-flipped {
        transform: rotateY(180deg);
      }

      &.is-completed {
        pointer-events: none;
        opacity: 0;
        transform: scale(0.8);
      }
    }
  }

  .phrase {
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    transform: translateY(-50%);
    font-family: 'Ubuntu';
    text-transform: uppercase;
    font-size: 40px;
    animation: englishPhrase 3s ease;

    .text-flow,
    .text-flow-hover:hover {
      letter-spacing: 20px;
      line-height: 2;
      font-size: 40px;
      white-space: pre;

      $animationSteps: 20;
      $animationDuration: 50;
      $animationElement: span;
      $animationElementsCount: 100;
      $delayBetweenLetters: 0.2;

      #{$animationElement} {
        animation-name: text-flow-keys;
        animation-duration: #{$animationDuration}s;
        animation-iteration-count: infinite;
        animation-direction: alternate;
        animation-fill-mode: forwards;
      }

      @keyframes englishPhrase {
        0% {
          opacity: 0;
        }

        100% {
          opacity: 1;
        }
      }

      @keyframes text-flow-keys {
        @for $i from 0 through $animationSteps {
          #{percentage($i * (1 / $animationSteps))} {
            color: hsla(random(365), 60, 60, 1);
          }
        }
      }

      $totalDelayTime: $animationElementsCount * $delayBetweenLetters;

      @for $i from 1 through $animationElementsCount {
        #{$animationElement}:nth-of-type(#{$i}) {
          animation-delay: #{($i * $delayBetweenLetters) - $totalDelayTime}s;
        }
      }
    }
  }
}
