.history-layout {
  .game-window {
    width: 100%;
    border-radius: 0;
    overflow: visible;
  }

  .wall {
    position: absolute;
    top: 0;
    bottom: 80px;
    left: 0;
    right: 0;
    background: black;
    z-index: 20;
    overflow: hidden;

    .attraction {
      position: absolute;
      width: 80px;
      cursor: pointer;

      &:hover {
        transform: scale(1.2);
      }
    }

    .flashlight {
      position: absolute;
      z-index: -1;
      height: 100px;
      width: 100px;
      border-radius: 50%;
      background-color: rgb(255, 244, 157);
      box-shadow: 1px 1px 40px 30px rgb(255, 244, 157);
    }
  }

  .attractions-line {
    position: absolute;
    bottom: -40px;
    width: 100%;
    text-align: center;

    .picture {
      display: inline-block;
      vertical-align: middle;
      margin-right: 10px;

      img {
        width: 50px;
      }

      .found-mark {
        position: absolute;
        width: 20px;
        animation: found-mark 0.3s ease both;
      }
    }

    .arrow {
      display: inline-block;
      vertical-align: middle;
      background-image: url(/images/history/arrow.svg);
      background-size: cover;
      width: 20px;
      height: 20px;
      transform: rotate(90deg);
      margin-right: 4px;

      &:last-of-type {
        display: none;
      }

      &.is-found {
        background-image: url(/images/history/arrow-success.svg);
      }
    }
  }

  .phrase {
    font-size: 40px;
    letter-spacing: 10px;
    top: 10%;
    position: absolute;
    width: 100%;

    .title-part {
      font-weight: 600;
      text-transform: uppercase;
      display: block;
      color: white;

      &:nth-child(1) {
        animation: phrase-text-shadow-1 2s ease both;
      }
      &:nth-child(2) {
        animation: phrase-text-shadow-2 2s ease 0.5s both;
      }
      &:nth-child(3) {
        animation: phrase-text-shadow-3 2s ease 1s both;
      }
    }

    mark {
      background: transparent;
      animation: mark 0.5s ease 1.5s both;
    }
  }

  @function shadow-string($color1, $color2, $length) {
    $total-length: $length;
    $string: $color1 0px 0px;
    @while $length > 0 {
      $mix-amount: 100 - (($length / $total-length) * 100);
      $mixed-color: mix($color1, $color2, $mix-amount);
      $string-addition: $length+px $length+px;
      $string: $mixed-color $string-addition, $string;
      $length: $length - 1;
    }
    @return $string
  }

  @keyframes phrase-text-shadow-1 {
    0% {
      text-shadow: none;
    }
    100% {
      text-shadow: shadow-string(#FF6138, white, 120);
    }
  }

  @keyframes phrase-text-shadow-2 {
    0% {
      text-shadow: none;
    }
    100% {
      text-shadow: shadow-string(#FFB400, white, 60);
    }
  }

  @keyframes phrase-text-shadow-3 {
    0% {
      text-shadow: none;
    }
    100% {
      text-shadow: shadow-string(#00A388, white, 100);
    }
  }
  @keyframes mark {
    0% {
      color: white;
    }
    100% {
      color: #FFEA80;
    }
  }

  @keyframes found-mark {
    0% {
      opacity: 0;
      transform: scale(1.5);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }
}
